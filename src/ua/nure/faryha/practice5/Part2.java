package ua.nure.faryha.practice5;

import java.io.InputStream;

/*
При демонстрации работы смоделировать ввод Enter через 2 сек (данную функциональность поместить в метод Part2.main).
(3) Алгоритм моделирования консольного ввода (метод Part2.main):
(3) Алгоритм моделирования консольного ввода (метод Part2.main):
-------------------------------------------------------
a) подменить системный поток ввода на свой собственный
   System.setIn(YOUR_OWN_INPUT_STREAM);

b) в отдельном потоке вызвать Spam.main
   Thread t = new Thread() { public void run() {Spam.main(null);}};
   t.start();

c) дождаться завершения Spam.main
   t.join();

d) восстановить системный поток
   System.setIn(CAСHED_VALUE_OF_SYSTEM_IN)

(4) Для реализации своего собственного потока ввода целесообразно создать класс,
который расширяет абстрактный класс java.io.InputStream.
При этом придется реализовать единственный абстрактный метод этого класса:
-------------------------------------------------------
public abstract int read() throws IOException;
-------------------------------------------------------
Все методы класса InputStream (а также всех его наследников), которые читают байты из источника информации,
в конечном счете вызывают метод read. Достаточно реализовать паузу в этом методе при первом его вызове,
которая заставит поток выполнения, который вызвал метод read, ожидать.
Метод read должен последовательно возвращать байты, которые соответствуют ограничителю строки,
после чего постоянно возвращать -1 (признак того, что информации во входном потоке больше нет).
 */
public class Part2 {

    public static void main(String[] args) {

       // InputStream is = System.in;

        Spam.main(null);
    }
}
